version: "3"
services:
  user-service:
    build:
      context: ./UserService
      dockerfile: ./Dockerfile
    # image: "pcminh0505/user-service" # For Production
    ports:
      - 8080:8080
    depends_on:
      postgres-user:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - postgres-user

  postgres-user:
    image: postgres
    container_name: postgres-user
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - PGDATA=/data/postgres
    volumes:
      - postgres-user:/data/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - postgres-user
    restart: unless-stopped

  business-service:
    build:
      context: ./BusinessService
      dockerfile: ./Dockerfile
    # image: "pcminh0505/business-service" # For Production
    ports:
      - 8090:8080
    depends_on:
      postgres-business:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-business:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - postgres-business

  postgres-business:
    image: postgres
    container_name: postgres-business
    ports:
      - "5123:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - PGDATA=/data/postgres
    volumes:
      - postgres-business:/data/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - postgres-business
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres-user
      - postgres-business
    restart: unless-stopped

networks:
  postgres-user:
    driver: bridge
  postgres-business:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres-user:
  postgres-business:
  pgadmin:
